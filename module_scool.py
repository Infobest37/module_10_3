import threading

x = 0
def thread1():
    global x
    for i in range(10_000_000):
        x = x + 1
'''
Атомарные операции — это операции в программировании, которые выполняются целиком и непрерывно, без возможности 
быть прерванными другими процессами или потоками. То есть, такая операция либо выполняется полностью, либо не 
выполняется вовсе. Это особенно важно в многопоточных программах, где несколько потоков могут пытаться одновременно 
изменить одну и ту же переменную или данные
'''
#Атомарные операции бывают
# res = []
# res.append(10)
# res.extend([10,34])
#res.sert()
#res.sert()


""" 
Итог:
Атомарные операции — это операции, которые выполняются так, что никакой другой поток или процесс не может вмешаться в 
их выполнение. Они гарантируют корректность работы многопоточных программ, предотвращая возможные ошибки при доступе 
к общим данным.
"""
def main():
    global x
    x = 0
    t1 = threading.Thread(target=thread1)
    t2 = threading.Thread(target=thread1)
    t1.start()
    t2.start()

    t1.join()
    t2.join()

for i in range(10):
    main()
    print(x)